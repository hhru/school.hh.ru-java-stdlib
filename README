Краткое описание первой версии архитектуры:

— Сервер реализует интерфейс Server (вместо изначального класса Server)
— ThreadedServer запускает обработку запросов в отдельных потоках
— AnnotatedServer наследует от ThreadedServer и позволяет задавать методы,
обрабатывающие клиентские запросы с помощью аннотаций, например: @MethodBody(GetMethod.class)
или @MethodBody(PutMethod.class), где GetMethod, PutMethod — классы-наследники MethodParser.
Они производят разбор запроса и формируют список параметров, передаваемых в аннотированный метод
— ServerImplementation реализует AnnotatedServer с методами GET, PUT и SET SLEEP
— Launcher остался практически неизменным

Таким образом:
— легко добавить новый метод серверу
— легко добавить обработчик этого метода конкретной реализации
— разбором строки запроса занимаются отдельные сущности, а параметры запроса поступают
в качестве параметров функции
— разбор запросов можно тестировать отдельно

Substitutor3000 тоже преобразован в интерфейс, его реализует KeyValueSubstitutor.
Учитывается потенциальная возможность появления бесконечной рекурсии при получении
значения ключа.